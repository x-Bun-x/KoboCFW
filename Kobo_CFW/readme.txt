

     CustomFirmware for Kobo Glo / Kobo Touch / Kobo Mini  "Advanced Edition" Ver0.95


■ はじめに

  このパッケージは、楽天Kobo Glo / Kobo Touch / Kobo Miniのファームウェアを強化し
  使いにくい／バグだらけ、と揶揄されるKoboを少しでも使いやすくするために作成されました。

  このパッケージは、Koboの電子書籍ビュアー部のソフトを書き換えているわけではありませんので
  インストールすることによりKoboが起動できなくなったり、データが削除されるようなことは
  ありませんが、利用については自己責任でお願いします。

  また、Hackスレでテンプレ化させていただいております以下のライブラリは作者様の許可を
  得ていませんのでパッケージされていません。

  ・jpeg高速描画エンジン
  ・Homeボタンでページ送りを行うdaemon


■ インストール要件

  公式FW2.3.1～2.4.0が導入されている Kobo Glo
  公式FW2.3.1～2.4.0が導入されている Kobo Touch
  公式FW2.3.2～2.4.0が導入されている Kobo Mini

  これらがインストールされていることが”必須”です。
  必ずKobo本体の「設定」メニューから「デバイス情報」メニューを開き
  ソフトウェア情報の「バージョン」を確認してください。

  また、本パッケージは初期設定時の楽天との認証の回避機能は提供されていません。
  認証回避したい場合には、「認証回避について」の中のreadmeを参考にして
  セットアップを実行してください。

  "Advanced Edition"以前のバージョンからのバージョンアップの場合
  特にそのままでも問題ありませんが、ファイル編成に大きな変更が加わって
  いるため、可能であればファクトリーリセットしてインストールする事をオススメします。

  基本的に、可能な限り"Advanced Edition"は公式FWのバージョンアップ以外では
  ファクトリーリセットをしなくても良いようにしていく予定ですが
  公式FWがとてつもないバージョンアップをしたら、この限りではありません。
  ※とはいえ、今回はCFWレベルでとんでもないバージョンアップとなりましたので
  ファクトリーリセットを推奨していますが・・・

  ファクトリーリセットした後、楽天IDを使う場合には楽天との認証を終えた後で
  インストールしてください。


■ インストール方法

  ！！！ 必ず公式FWを対応するバージョンにアップデートしてインストールしてください。
  ファクトリーリセット直後のUSB接続などでいきなりCFWを導入すると最悪Koboが二度と
  起動できなくなる恐れがあります ！！！


  公式FWのバージョンが確実に最新版になっていることを確認した後、本パッケージの
  「.kobo」フォルダを、USB接続したKoboにコピーしUSB接続を解除してください。

  Koboが自動的に再起動され、インストールが完了します。


■ アンインストール方法

  基本的に、機能の無効化を行うだけであれば設定ファイルkoboCFW.confを削除し
  .imagesフォルダを削除すればCFWで提供される機能のほとんどが動作しなくなり
  標準のKoboと同じ動作に戻ります。しかし、CFWでインストールされる各種
  ライブラリや不具合修正パッチはそのまま生きていますので、クリーンな状態に
  戻すのであれば。面倒でもファクトリーリセットを実行してください。


■■ CFWの機能について ■■


■ 目的

  このパッケージは、主に２つの目的があります。

  目的１：Koboのファームウェアの不具合を解消する
  目的２：Koboの機能を拡張し、使用者、特に自炊ユーザー向けの強化機能を提供する

  本パッケージをインストールした状態で目的１の「不具合解消」は完了しています。
  拡張機能は要らないので、不具合だけ解消して使いたい場合はそのまま利用してください。

  拡張機能を使いたい場合には、■ 目的２：拡張機能について に進んでください。


■ 目的１：解消される不具合について

  Koboは、もともと英語圏で開発されたものです。
  そのため、よく「日本語対応（ローカライズ）が甘い」と言われます。
  確かにそれはあるのですが、中にはベースになっているLinuxの問題もあるため
  一概にKoboだけの問題とも言えません。

  本パッケージで解消される不具合は以下の通りです。

  ① 外部SDカードに保存されたファイルの名前に２バイト文字が使用されている場合
     Kobo本体に差し込むとKobo上で文字化けが発生してしまう
     さらに、いくらパッチを当ててもFWをアップデートすると元に戻ってしまう。
  ② 内蔵ストレージに置いたファイル名、フォルダ名に特定の文字が含まれていると
     そのファイルやフォルダが削除されてしまい、使用できない。
  ③ CBRファイルの中に、上記②のような名前を持つファイルが格納されている場合に
     正常に使用できない。
  ④ Wifi設定が壊れてしまうと、以後何度設定を変更しても保存されなくなる。
  ⑤ 外部SDカードを使っていると、色々なタイミングで高確率でフリーズする。
  ⑥ 青キン明朝などのユーザーフォントを利用していると、その設定が壊れ
  デフォルトの設定に戻ってしまう（再現条件はほぼ確定）

  実はこれ以外にも、FW2.3.xには外部SDカードに起因するバグが幾つも確認
  されています。その全てを解消できているわけではないのでご了承ください。


■ 目的２：拡張機能について

  "Refined Edition"を経て、"Advanced Edition"となった本FWは、これまで開発された
  CFWの機能をリファイン・再構築し、以後に有志により作成された追加機能を搭載しています。

  拡張機能を使うためには、同梱されている「koboCFW.conf」ファイルをテキストエディタで
  自分の好きな設定に書き換えて、USB接続されたKoboの「.kobo」フォルダにコピーして
  ください。.koboフォルダ以外に配置しても動作しませんので注意してください。

  ※注意
  このバージョンから「koboCFW.conf」は以前のバージョンから完全に互換が無くなっています。
  旧バージョンのkoboCFW.confは削除し、本パッケージに同梱されている
  新しいkoboCFW.confに置き換えて下さい。

  コピー後、Koboを一度再起動してください。一部の機能は初回起動時に処理されます。

  拡張機能で現在使用可能な機能は以下の通りです。

  ① 外部SDカード、内蔵ストレージに保存されたzipファイルをcbzファイルにリネーム
  ② 外部SDカード、内蔵ストレージに保存されたrarファイルをcbrファイルにリネーム
  ③ 外部SDカード、内蔵ストレージに保存されたTextファイルをHTMLに変換
  ④ PDF,CBZ,CBRファイルのページ送りをkepub.epubと同じ左→右スワイプ、または
     スクリーン左部タッチにより「次ページ」になるように変更する機能
  ⑤ CBZ、CBRファイルのファイル名が [著作者名] 書籍名.cbz(またはcbr)というフォーマットに
     準拠している場合、Kobo上の著者名、書籍名を自動で正しく更新する機能
  ⑥ 書籍の登録後に、ユーザー本、ストア本ごとに著者名・格納しているフォルダ名・出版社名
     などから自動で本棚を作成して書籍をその中に格納する機能
  ⑦ 壊れたり、消せなくなった本棚を全て削除し、⑥の自動本棚作成機能を使って本棚を
     再構築する機能
  ⑧ 内蔵ストレージ領域に、Linuxのswapパーティションが存在した場合、起動時に自動で
     スワップ領域としてKoboが利用できるようにする機能
  ⑨ データベースが肥大化してしまい、動作が重くなった場合にデータベースの最適化を
     実施する機能
  ⑩ データ補完をKoboのコンテンツ処理に連動して実行。また、起動時に再補正を実行する機能
  ⑪ データの高速Commitモードを使う機能
  ⑫ 起動中やサスペンド画面に表示されるアニメーション・静止画を自由にカスタマイズできる
     テーマ機能
  ⑬ (kepub.epubのみ）使用するフォント、フォントサイズの設定をテンプレート書籍の設定に
     従って全書籍共通化するフォント設定共通化機能
  ⑭ 最後に読んだ本が格納されている本棚にある本を「最近読んでいる本棚」に自動登録する機能
  ⑮ データベースのキャッシュサイズを任意に拡張するDBキャッシュサイズ拡張機能
  ⑯ Koboがフリーズした際に、電源LEDを赤点灯し「フリーズしたこと」を通知する機能
  ⑰ よりKoboで読書を快適にするための独自フォント「KB Mincho」「KB MinchoM」の実装

  これらの機能は、koboCFW.confを編集することで動作を多岐にわたり変更できます。
  詳細は、koboCFW.confを参照してください。


■ リファインされた機能

  ① 外部SDカード、内蔵ストレージに保存されたzipファイルをcbzファイルにリネーム
  ② 外部SDカード、内蔵ストレージに保存されたrarファイルをcbrファイルにリネーム
  ③ 外部SDカード、内蔵ストレージに保存されたTextファイルをHTMLに変換
  → これまでは外部SDカードのみ対象でしたが、内蔵ストレージもこの機能が使えるように
     変更しました。ただし、内蔵ストレージに対してはkoboCFW.confのInternalStrageBookFolderに
     指定したフォルダ配下しか実行しません。

  例：(koboが接続されているドライブ)
      + .kobo     → このフォルダをInternalStrageBookFolderに指定しても動作しません
      + kobodata  → InternalStrageBookFolderに「kobodata」と設定すると、このフォルダ配下が対象

  ④ PDF,CBZ,CBRファイルのページ送りをkepub.epubと同じ左→右スワイプ、または
     スクリーン左部タッチにより「次ページ」になるように変更する機能
  → これまではcbzファイルだけでしたが、PDFファイル、CBRファイルも対象としました。

  ⑤ CBZ、CBRファイルのファイル名が [著作者名] 書籍名.cbz(またはcbr)というフォーマットに
     準拠している場合、Kobo上の著者名、書籍名を自動で正しく更新する機能
  → 作者様の作った配布パッケージから同機能をお借りし、他のデータ補正機能と併せて動作させる
     ように変更し、組み込みました。

  ⑧ 内蔵ストレージ領域に、Linuxのswapパーティションが存在した場合、起動時に自動で
     スワップ領域としてKoboが利用できるようにする機能
  → 作者様の作った配布パッケージと同じように、設定でON/OFFできるように変更して
     組み込みました。swapパーティションの作成方法ドキュメントはhackスレの859氏のご好意により
     本配布ファイルに転載させて頂きました。ありがとうございます。

  ⑩ データ補完をKoboのコンテンツ処理に連動して実行。また、起動時に再補正を実行する機能
  → "Advanced Edition"から、各種データ補正処理がコンテンツ処理に連動して実行するように
     なりました。これにより、以前のようにコンテンツ登録後のUSB再接続や再起動は不要になりました。
     USB接続解除時のデータ補正中は、LEDが青点滅→青点灯→消灯と変化していきますので
     LEDが消灯するまでホーム画面に戻っても少しの間操作しないようにしてください。

     詳細は、「コンテンツ処理後の補正について」を参照してください。

  ⑪ データの高速Commitモードを使う機能
  → 設定でON/OFF可能としました。WALモードは高速ですが、その分Commit時に一時領域も
     メモリも消費します。本をどんどん追加している間はOFFにしておき、読書がメインの
     運用を行う間だけONにする運用が良いと思われます。


■ 新規に追加された機能

  ⑥ 書籍の登録後に、ユーザー本、ストア本ごとに著者名・格納しているフォルダ名・出版社名
     などから自動で本棚を作成して書籍をその中に格納する機能
  → Koboの本棚機能は、公式FW2.1.4から随分と改良され、「本棚を作りすぎると重くなる」事は
     なくなりました。しかし、本棚の登録、本棚への書籍登録のやりにくさは相変わらずです。

     そこで、自炊本、ストア購入本のデータ上の情報と本を格納しているフォルダ名から
     本棚を自動作成し、書籍をそこに自動登録する機能を追加しました。
     これにより、書籍を登録→本棚作成→本棚に書籍を追加 という手間が多少なりとも
     軽減されると思います。

     Ver0.95より本棚の命名設定を自炊本と購入本で別々に設定可能となりました。
     これにより「自炊本はフォルダ名を本棚にし、購入本は著者名を本棚にする」といった
     より整理し易い運用が行えます。

     また、この機能は「既に別の本棚に登録されている本」は処理対象外です。
     自動本棚作成機能で本棚登録して欲しくないデータは、あらかじめ別の本棚に書籍を
     登録しておいてください。

     タイプ別のモードの詳細については、koboCFW.confを参照して下さい。

     ※補足

    「フォルダ名からの本棚自動生成」については、本が置かれている最下層のフォルダを
     本棚として認識する点に注意してください。

      例：K:\AAA\に本が置かれている場合             → 本棚名「AAA」
        ：K:\AAA\BBB\CCC\DDD\に本が置かれている場合 → 本棚名「DDD」
        ：K:\に本が置かれている場合                 → 本棚名「その他」（※名称は変更可能）
        ：SDカード直下に本が置かれている場合        → 本棚名「その他」（※名称は変更可能）

     ドライブ直下（ドライブルート）は全て「その他」として処理します。



  ⑦ 壊れたり、消せなくなった本棚を全て削除し、⑥の自動本棚作成機能を使って本棚を再構築する機能
  → 上記⑥の機能を作っているときに、たまに「文字化けした本棚が消せない」という問題があることを
     思い出し、実装しました。まぁ、全削除→全再作成だけなんですけどねっ

     本棚自動登録の設定をあれこれいじっている間は、この設定をONにする事を推奨します。
     一度本棚に登録されたデータは自動本棚登録の処理対象外になるためです。

     また、Kobo DeskTopとの同期を使っている人は再作成された後にもう一度USB接続し
     Kobo DeskTopを起動してリーダーを同期して下さい。Kobo DeskTop経由でクラウドに保存されている
     古い本棚データも連動して削除されます。


  ⑨ データベースが肥大化してしまい、動作が重くなった場合にデータベースの最適化を実施する機能
  → データベースの性質上、頻繁なデータの更新（追加、削除、修正）を行うとデータベースファイルが
     肥大化し、どんどん動作が重くなっていきます。これはKoboのせいだけではなく、内部で使われている
     データベースエンジンの仕組み上、避けて通れない事象です。

     そこで、koboCFW.conf内でDataBaseOptimizationをONにした状態でKoboを再起動すると
     起動時にデータベースの再構築を行う機能を実装しました。
     DBの内部に不整合が起こっていなければ、時間はかかりますが本機能で肥大化したDBをある程度
     ダイエットすることが可能になります。

     本処理が実行されている間は「ケイちゃんとコボ九郎」が実行中をお知らせしてくれます。
     ケイちゃんとコボ九郎がてくてく歩いている間は、絶対にKoboの電源を切ったりリセット作業を
     行わないようにして下さい。書籍数にもよりますが、下手をすると30分単位で処理時間が必要に
     なるためです。

     本機能は、一歩間違えればDBを破壊しかねない機能でもありますので
     利用する際は十分注意してください。基本的に通常運用の間はDataBaseOptimizationをOFFに
     しておいてください。


  ⑫ 起動中やサスペンド画面に表示されるアニメーション・静止画を自由にカスタマイズできるテーマ機能
  → 起動中やアップデート中に表示される各種アニメーション、静止画を特定のフォーマット、ファイル名で
     Koboに転送する事により、動作中に表示されるアニメーションや静止画を自由にカスタマイズできます。
     フォーマットの詳細・テーマ動作の詳細については、「テーマ機能について」フォルダ内にある
     ドキュメントを参照して下さい。

     良いテーマを自作した人、どんどん公開しちゃってくださいｗ


  ⑬ (kepub.epubのみ）使用するフォント、フォントサイズの設定を全書籍共通化するフォント設定共通化機能
  → kepub.epub形式の本に設定可能な「フォント」や「フォントサイズ」の設定が、公式FWが2.2.xあたりから
     何故か書籍ごとに毎回毎回設定しなくてはいけなくなりました。
     データ上は確かに書籍別に設定を保持できるのですが、共通設定のようなものが見当たらないため
     本ごとにイチイチ設定を施す必要が発生してしまいます。

     本機能はまず「テンプレ本」フォルダに格納した本をKoboに転送し、Koboに本として認識させ
     その本に対してフォント設定を行います。
     そうすると、データ補正時に登録されている他のkepub.epub形式本に設定を自動コピーします。

     なお、コピー対象の本の読書ステータスは設定で選択可能ですが、「未読の本」を推奨します。
     これは、kepub.epub形式の場合「自分がどこまで読み進めているか」という情報がページ数だけでなく
     フォントの設定によっても変化するためです。途中まで読んでいる本のフォント設定を変更すると
     その章のはじめに戻ってしまうといったおかしな現象は、これが原因です。

     ただし、強制的に全ての本に対してフォント設定を共通化する事も可能にしています。
     この場合、途中まで読んでいる本の読書再開位置がずれてしまいますが、それはご了承ください。


  ⑭ 最後に読んだ本が格納されている本棚にある本を「最近読んでいる本棚」に自動登録する機能
  → Koboを常用、特に自炊本のリーダー目的で使っていると、あちこちに「使いにくい、面倒だなあ」と
     感じる部分があります。

     その中でも個人的に最も使い難く感じるのが「本を読み終わると必ずホーム画面に戻ってしまう」
     という仕様です。

     以前の公式FWであれば、読み終わる直前に下部メニューから「ライブラリ」を選択すると
     直前のライブラリ（本一覧や本棚内部の本一覧）に戻れていたのですが、公式FWの2.2.x系から
     この機能が無くなってしまいました。

     これにより、同じ本棚に格納されているシリーズを連続して読み進めたい場合に

     【読了→ホーム画面→本棚一覧を開く→対象の本棚を探して選択→次の本を探す→次の本を選択】

     という、面倒くさい手順を踏まないといけなくなりました。

     そこで、「最後に読んだ本」の情報をデータから取得し、その本が格納されている本棚に
     登録されている他の本を、本棚一覧の最初のページに「最近読んでいる本棚」という名前の
     本棚に自動格納する機能を搭載しました。対象の本の読書ステータスも設定で変更可能です。

     これにより

     【読了→ホーム画面→ 本棚一覧を開く→「最近読んでいる本棚」を選択→次の本を選択】

     と、若干でも次の本へのアクセスステップを減らせます。

     「最近読んでいる本棚」は、見た目にはわかりませんが本棚名の先頭に半角空白を入れています。
     本棚一覧は、基本的に本棚名で順番が決定しますので、「最近読んでいる本棚」は
     まず間違いなく本棚一覧を表示した時に、イの一番で表示される筈です。

     ・・・と、ここまで読むと「ヲヲ、なんとなく便利」と思うかもしれません。
     しかし、本棚の中身を自動更新しても、Kobo上の表示は昔のままで最新の情報に
     リフレッシュしてくれません。
     つまり、データはきちんと書き換わっているにも関わらず見かけは全く変わっていないのです。

     そこで、以下の手順を踏んで「手動で」本棚の登録情報をリフレッシュしてください。
     ※ USB接続/解除や再起動でもリフレッシュされます。

     ① 本棚一覧を開き、「最近読んでいる本棚」の一番右にあるメニューボタンをタップ
     ② 開いたメニューの中にある「本棚の編集」を選択
     ③ リフレッシュ前の本が一覧表示されるので、適当な本のチェックをタップしてOFFに変更
     ④ 保存ボタンをタップ

     こうすれば、内部で自動更新された最近読んだ本棚の登録本がリフレッシュされます。

     オススメの使い方は

     A：同じ本棚の中にある本を連続して読みたいとき
     → 何冊か読んだタイミングで、上記のアクションを実施してリフレッシュする
     ※ 設定にも拠りますが、読み終わった本が本棚から消えていくので次の巻へのアクセスが楽になります。

     B：今まで読んでいた本棚とは違う本棚に切り替えたとき
     → 切り替えた直後に上記のアクションを実施してリフレッシュする。
     ※ 中身がばさっと全てリフレッシュされるので、新しいシリーズへのアクセスが楽になります。


     「本棚の登録内容のリフレッシュ」は、今後も何か方法が無いか追及していく予定です。


  ⑮ データベースのキャッシュサイズを任意に拡張する「DBキャッシュサイズ拡張」機能
  → 書籍情報、本棚、バッジ、フォント設定、ページ設定・・・これらは全てKobo上では
     データベース化されて管理されています。

     しかし、Koboの電子リーダーソフトの稚拙な構造により、データベースは決して
     最適化された設計とは言い難く、無駄なデータの読み込みが頻繁に発生してしまいます。
     本の冊数が少ない時は良いのですが、本が増える・・特に漫画や自炊CBZが増えると
     このデータベースは加速度的に肥大していき、MicroSDカードという内部メモリの
     仕様と併せて、どんどん動作パフォーマンスが落ちていきます。

     そこで、このデータベースに対してKobo本体のメモリをキャッシュとして割り当てて
     データベースのアクセススピードを少しでも稼ぐのが「データベース・キャッシュ」です。

     このキャッシュサイズはKobo標準では2メガしか割り当てられていません。
     しかし、データベースファイルのサイズは、CBZを数十冊入れるだけですぐに数十メガ、
     1000冊を超えると、数百メガまで膨れ上がるため2メガのキャッシュなどは何の意味も
     持ちません。

     そこで、起動時にこのデータベースキャッシュを拡張する機能を実装しました。

     実は、この機能は以前のバージョンで「データベース・チューニング」という形で
     実装しており、これまではサイズを「65534」にまで強制拡張していました。
     しかし、データベースが肥大化した状態でキャッシュサイズを限界まで拡張すると
     Koboの電子リーダー部のソフトがメモリ不足を起こしてしまう事象が発生しました。
     （スワップ領域を使えば、遅いながらも何とかなりますが）
     また、キャッシュサイズの拡張は本が少ない人やストア利用がメインの人には
     逆に何の意味もありません。

     そこで、強制拡張ではなく任意サイズに拡張できるように機能を変更しました。

     koboCFW.confに設定可能なサイズは記載していますが、データベースサイズが
     巨大になっている人は「MAX」の設定は避けるようにして下さい。
     （KoboReader.sqliteファイルのサイズが300Mオーバーだと、スワップをONに
     しないとMAXの設定は危険です）

     作者の環境では、スワップON（256M）＋キャッシュサイズ"MAX"で
     1200冊近いKobo Touchで問題なく動作しています。
     （流石に本の冊数が多いので、本一覧や本棚を開くのに時間がかかりますが
     メモリ不足でフリーズすることはありません）

     この設定は、スワップ設定と併せて利用する事を推奨します。


  ⑯ Koboがフリーズした際に、電源LEDを赤点灯し「フリーズしたこと」を通知する機能
  → 公式FW2.2.x系以後、外部MicroSDに関係した大幅な仕様変更が発生しまし。
     しかし、実際はこの仕様変更はかなり無理のあるものだったようで
     外部SDカードを指しているだけで、あちこちでKoboがフリーズするように
     なってしまいました。

     フリーズした際は、大半のユーザーが爪楊枝などで背面やUSBスロットの横の
     穴の中にあるスイッチを押してリセットしているようです。
     （Miniにいたっては、背面カバーを外さないとスイッチが押せないとか）
     Koboを持ち歩いている人の80%が爪楊枝を持ち歩いているというデータもあります（嘘

     しかし、実は「Koboの電子ブックリーダー部」のソフトがフリーズしただけの
     状態であれば、KoboそのもののOSはフリーズしたわけではなく、まだ生きています。
     この状態であれば、正しい手順を踏んで電源をOFFすれば何の問題もなく正しく
     電源をOFFする事ができるのです。

     しかし、この「Koboの電子ブックリーダーがフリーズしたか」がわかり辛い。
     エラーメッセージが出るわけでもなく、画面はE-Inkの特性上固まったような
     状態のまま書き換わらない・・。動いているのかどうか、全くわからないのです。
 
     そこで、何かしらの理由によりKoboのリーダーソフトがフリーズした場合
     電源ランプを赤く点灯するようにしました。

     この状態になったら、電源ボタンを長スライドしてください。
     間隔としては、フリーズしていないときよりも長めにです。そうすると
     まるで角の生えた三倍速い奴のように真っ赤なLEDが消灯します。これで
     ちゃんとOSとなるLinuxが正しい手順を踏んで電源が切れてくれます。
     この時、画面は最後に表示していたものがそのまま表示されたままになって
     いますが、それはE-Inkの特性上仕方がないので気にしないでOKです。

     その後、普通に電源ONすれば起動します。
     これで爪楊枝の出番は大幅に減るかと思います（笑
     爪楊枝は、本来の目的で使用することを推奨します（笑


  ⑰ よりKoboで読書を快適にするための独自フォント「KB Mincho」「KB MinchoM」の実装
  → Koboで採用された「kepub.epub」形式は、どうもKobo内部ではKindle等とは違い
     かなり独自仕様が入っているようです。そのため、デフォルトのリュウミンも
     Kindle等でよく使われている「青キン明朝」などでも、微妙に文字の線が細く
     （個人の感じ方の差もありますが）人により好き嫌いが分かれる状態でした。

     今回、フォント職人Nitori18様の尽力によりKoboのkepub.epub形式に最適化された
     独自フォント「KB明朝」「KB明朝M」が発表されました。

     ちょうどそんなとき、Koboのフォントの検索仕様が解析され、USB接続された
     Koboのfontsフォルダは一番最後に検索されることが判明しました。
     「フォント設定統一化機能」の実装タイミングと言うことと、フォント周りに
     端を発する不具合が多い現在の公式FWの状況を踏まえて、これらをパッケージ内に含め
     システム内蔵領域に登録するように実装させて頂きました。

     これにより、KB明朝は標準フォントの「次」に読み込まれるようになるため
     起動時の負荷も減り、より良い形で実装することができました。



■■ CFWの各機能についての補記・補足・注意事項 ■■


■ コンテンツ処理後のデータ補正について

  "Refined Edition"までは、ページ送りの統一やフォント設定の共通化
  本棚の編集といった拡張処理を、新規の本を登録した直後のコンテンツ処理に
  連動させることができませんでした。そのため、コンテンツ処理が終わったら
  再度USB接続するか、再起動する必要がありました。

  また、コンテンツ処理の直後の「現在のデータの状態」をチェックする
  ことができなかったため更新対象のデータが追加されたかどうかを判定する
  ことが出来ず、やむを得ず毎回更新を実行していました。

  しかし、0.95から「コンテンツ処理直後」のタイミングでデータの
  チェックを行うことが可能になったため、本の冊数監視を行うことが可能に
  なりました。これによりUSB接続解除時、本の冊数が変化していない場合は
  データの補正を行いません。そのため、随分とUSB接続解除後のホームへの
  復帰が早くなったと思います。

  ※ ただし、本の冊数が変化していないときでも「本棚を再構築する」
  「最近読んでいる本棚機能の利用」オプションがONになっている場合
  本棚の再構築だけは実行されます。

  本の冊数が変化したときは、以下の順でデータの補正を行います。

  １．著者名・本名更新（補正されていないものだけを更新します）
  ２．ページ送り補正（補正されていないものだけを更新します）
  ３．フォント設定共通化（共通設定がコピーされていないものだけを更新します）
  ４．新規登録された本の、本棚への自動登録

  このうち、１か２のいずれかのデータが更新されると「再起動」の条件が
  そろい、設定に拠っては自動でKoboを再起動します。

  なぜ再起動させるか？

  それは、補正されたページ送りや著者名は、コンテンツ処理時にKoboに
  設定が読み込まれてしまうため、その後で内部のデータを更新しても
 「表示上」反映されないのです。内部的にはデータはきちんと更新されて
  いるのですが・・・

  コレを反映させるには、一度USB接続を解除するか、再起動しないといけないのです。
  （最近読んでいる本棚も同じですが・・・）

  しかし、それ以外の部分・・本棚関係やフォント関係は即時反映されていますので
  kepub.epubがメインの運用をしている人は、再起動させなくても十分です。

  なお、本体起動時は本の冊数の変化に関わらず１～４を全て実行しますので
  例えば、ページ送り補正を途中まで「OFF」にしていたが、途中から「ON」に
  変更した場合、設定変更前に登録され、ページ送りが補正されていないデータを
  処理したい場合には、Koboを一回再起動してください。
  最新の設定に従って「OFF」になっていたデータがちゃんと更新されます。



■ スワップパーティションについて

  "Advanced Edition"では、スワップパーティションなるものを使うように調整が施されています。
  スワップパーティションの作り方については、本パッケージ内に同梱させて頂いております
  初代スレ859氏が作成した詳細なドキュメントを参考にしてください。

  では、そもそもスワップパーティションを作る事でどんなメリットがあるのでしょうか？

  はっきり言えば、自炊目的で使用しない限りスワップパーティションの恩恵はありません。
  スワップパーティションというのはWindowsで言うところの仮想メモリのようなもので
  物理的に256Mしか搭載されていないメモリを、内蔵ストレージの一部を借りて
  メモリの一部のようにみせかけて使えるようにするだけです。

  では、どんな時に恩恵があるのでしょうか？
  hackスレで出た報告と、自分自身の経験から「少なくとも」以下のようなケースだと
  スワップパーティションの恩恵はあると言えます。

  ① 巨大な本データ（数百メガ単位の単一ファイル、報告ではPDF）を読もうと本を開くと
  スワップ領域が無いとメモリ不足で確実にKoboがフリーズするが
  スワップ領域を使っていると大きなファイルでも読み込めるようになる

  ② 1000冊の自炊本データ全てを「コンテンツ処理」にかけると、スワップ無しだと
  必ず60%そこらでフリーズするが、スワップ領域を使う事で1000冊でもコンテンツ処理で
  全て処理完了できるようになる。
  ※ Kobo Touchでのお話し。トータルの本データサイズはなんと25ギガちかくありました。

  要するに、巨大なデータや大量のデータを扱う際に効き目があるという事です。
  逆に言えば、自炊目的の利用であってもこういった「Kobo本体にかなり無理をかける」
  使い方をしない限り、スワップ領域を使うメリットは無いという事になります。

  なので、無理に使う必要はありません。

  尚、私はKobo Gloに256Mのスワップ領域を作り、常時ONで使っています。
  300冊程度のCBZデータ（トータルサイズで4Gくらい）をコンテンツ処理させても
  問題なく終了します。

  Koboを扱う人のスタイルにあわせて、本機能を使うようにするのが良いでしょう。


■ ファイル名の命名規則

  著者名自動更新機能は、ファイル名から著者名を割り出すという行為の関係上
  著者名を指し示す「 [] 」の文字がファイル名に何度も出現すると正常に動作しません。

  ○ [怪しい著者] 怪しい本（上）.cbz
  ○ [怪しい著者] 怪しい本(上).cbz
  × [怪しい著者] 怪しい本[上].cbz

  [] は著者名以外の部分には使用しないように注意して下さい。


■ 外部スクリプト機能について

  以前のCFW配布パッケージでは、USB接続されたkoboのextフォルダにある各種スクリプトを
  動作させることが可能になっていました。

  "Advanced Edition"は、基本的にカスタム機能は全て大半はKobo本体内のパーティションに
  配置されていますので、外部スクリプトを使う必要性はほとんどなくなりました。
  しかし、「認証回避」や「購入するボタンの削除」、更には後述する「ページ送りdaemonの起動」と
  いった「全ての環境に必要ではないが、一部の環境には必要になる」機能は、この外部スクリプト
  起動機能を使う必要があります。

  以下に外部スクリプトの起動タイミングと名称を記載しておきます。

  ・boot.sh・・・・・ 起動時に実行されます。以前とはタイミングが異なりKoboの電子ブックリーダーソフトが
                      起動されるよりも前に実行されます。
  ・mount_usb.sh・・・KoboがUSB接続された直後に実行されます。外部SDカードの有無は関係ありません
  ・umount_usb.sh・・ KoboのUSB接続が解除された時に実行されます。外部SDカードの有無は関係ありません。
                      ただし、Kobo本体の更新が実行され、再起動される場合はこのスクリプトは実行されません。
  ・mount_sd.sh・・・ Koboの外部SDカードが挿入された直後に実行されます。
  ・suspend_start.sh・Koboがスリープ状態になる直前に実行されます。
  ・suspend.sh・・・・Koboがスリープ状態になり、suspend.pngを表示した直後に実行されます。

  ※ 注意
  Kobo Touchに"Advanced Edition"をインストールした上で「Homeボタンでページ送りを行うdaemon」を
  使いたい場合には、boot.shでこのdaemonを起動するように変更しなくてはいけません。
  詳細は「Homeボタン変更daemonインストール」フォルダの中のreadmeを参照して下さい。

  ■ 補記

  公式FWが2.3.2にアップデートされた際に、どうも自炊本の内部判定が変わったようで
  登録してある自炊本に「購入する」というボタンが表示されたり、ホーム画面に
  自炊本が表示されなくなったりする問題が起こりました。

  今回の配布パッケージにはこの問題を解消するためのパッチを、この外部スクリプト起動機能で
  提供しています。

  詳細は「FW2.3.2・自炊ファイル購入ボタン修正」フォルダ内のドキュメントを参照して下さい。



■■ 初出、コピーライト的な何か ■■


■ CFWの開発スキーム

  このパッケージは、2ちゃんねる電子書籍板：Kobo Hackスレの皆様の知恵と技術と試行錯誤の結集です。

  Kobo Touch/Glo/Mini hacking スレ Part.4
  http://uni.2ch.net/test/read.cgi/ebooks/1360673958/

  Kobo Touch/Glo/Mini hacking スレ Part.3
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/

  Kobo Touch/Glo/Mini hacking スレ Part.2
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/

  Kobo Touch hacking スレ
  http://uni.2ch.net/test/read.cgi/ebooks/1342916042/

  自分は、スレの皆様のネタを自分なりに再パッケージしただけで
  一部の機能を除き、それぞれの機能には全て元の作者様が居ます。
  元の作者様の機能をそのまま使ったものもあれば、パッケージ化の際にアレンジしたものもあり
  全てが元のままというわけではありませんが、少なくともHackスレにて
  元機能の作者様が提示してくれた機能、パッチが無ければこのCFWは成立していません。

  hackスレは、自分も含めて「その人が最も得意とする分野」の知恵が結集していると感じます。
  自分はLinuxは初心者なので、よりLinuxに近い部分でのカスタマイズには限界があります。
  絵心も無いので、素敵なテーマを描く事もできません。

  ですが、hackスレの住民には、私が持ちえない色々な知識と技術を持つ人が集まり
  いろいろなものを公開してくれています。

  それらは、単体ではあまり効果が無いかもしれませんが、融合すると「まさかこんなことまで」と
  思うような事ができるようになるものです。

  今回は、そんなお世話になっているスレ住民の皆様に感謝の気持ちを込めて、
  ちょっとだけ住民をご紹介させてもらいます。



  ○ png2raw,fbmnbplay作者様（仮称ｗ

  自分のせいだと思っていますが（笑）2chでは珍しくコテハンを付ける人が多い
  Hackスレで、未だにコテハンを名乗って頂けないため便宜的にこう呼ばせて
  貰っています（笑

  ですが、書き込みを見れば一発でわかるという・・・（笑

  多分、ではあるのですがLinux初心者の自分を一番フォローしてくれた人では
  ないかと思っています。fbmngplay,png2rawを「こんなの作ってみたー」みたいな
  軽いノリで公開していただきましたが、まずこれが無いとテーマ機能なんて
  実装できなかったんですから、そこだけはわかってくださいね（笑

  論理的な解析・ノリだけじゃない明確な推察。何より純粋に高い技術。
  この人が居なければ実装できなかった機能多数。本当に感謝しています。

  もう書き込み内容でバレるんですから、何かわかり易い呼び名を名乗ってください（笑


  ○ 前スレ555氏

  プログラムやパッチではありませんが、本スレから「ケイちゃんとコボ九郎」というキャラが
  誕生しました。以下、作者様の設定（？）の転載－

 「ケイちゃんは元気な文学少女。好きな作家は太宰治
  コボ九郎は明るくはきはきした性格。のんびり屋でデベソの兄コボ太と小柄でおしゃまな
  妹のコボ美の三弟妹。
  派手好きな従兄弟のあー君は現在カナダに留学中。」

  ※あー君は現在日本では未発売です。

  ・・・と、旧ドキュメントでは記載させて頂いていました。

  LinuxOS、プログラム、データベースといった「専門的知識」以外で
  初めて協力して頂いた人です。

  絵心が無い自分からすれば、絵を描けるだけでも凄いのですが・・・。

  Koboの意匠をきちんと組み込んで（ワンピの柄だけではなく、髪型まで汲んでいたと
  教えて頂いた時には心底びっくりしたものです） 萌えとシンプルのギリギリの
  ラインでデザインされた「ケイちゃん」「コボ九郎」は、個人的には
  物凄い思い入れがあります。

  以前のβリリースの「をまけ」に付けた「ちょっと待ってね」アニメーションの
  起動画面は、未だに自分のGloのBootアニメーションになっています（笑

  
  ○ Nitori18(前スレ570)氏

  フォント設定共通化機能が導いてくれた、まさかまさかのフォント職人様。
  設定共通化のテンプレ本も作っていただき、フォント設定共通化機能のインパクトを
  何倍にもしてくれたと思っています。

  よもや、独自フォントをCFWレベルで実装できるとは夢にも思っていませんでしたから。

  専門的な知識がないとCFWの開発に協力することはできない、というこのテのスレの常識を
  前スレ555氏と同様にぶち壊してくれた人だと思います。

  何より「自分にできる部分で参加したい」とはっきりとスレで宣言してくれた人でも
  あるのです。それがどれだけ自分たちにも、そして「何か協力できることはないかな？」と
  考えてくれているスレ住民に力を与えたか。

  KB明朝、当然自分のGloではデフォのフォントです。
  できれば次は「KB丸ゴシック」を希望します（笑


  ○ bucchi氏

  Kobo Hackスレのテンプレにも記載させて頂いております、「ぷちのいず」blogの作者様。
  きっと「を、何か楽しそうなことやってるな？」ってなノリで来訪したのかもしれませんが
  いつの間にか、Hackスレには欠かせない存在になりました（笑

  公式FW2.3.x系の最大のバグである「外部SDカードを挿しているとフリーズする問題」の
  原因を突き止め、それが何とフォント設定が壊れる問題とリンクしていることまで突き止め
  二つの問題を一気に解消するモジュールを公開して頂きました。

  それだけでも十分すぎるくらい凄いことなのですが、さらに今までは不可能だと
  言われていた「コンテンツ処理直後」や「サスペンド時の処理」「電源OFF時の処理」を
  横取り可能にし、CFW全体の構造を激変させるまでのインパクトを与えてくれました。
  正式公開前の0.94を全部ぶっ壊す羽目にはなったのですが（笑 それを差し引いても
  あり余るくらいのモジュール。

  DBしか能が無い自分が、「本当はこうしたかったんだ！」という想い・願いを
  具現化するキッカケを作ってくれたこと、どれだけ感謝しても足りません。

  開発中だろうと思われる（そして、それを待っているユーザーも多いと思われる）
  起動時・サスペンド復帰時のパスワードロック機能を開発者としてではなく
  一人のKoboユーザーとして楽しみにしております。


  ○ そして、名も無いCFW開発者の皆様

  KB Mincho、Mistyテーマなど「フォント職人」「テーマ職人」といったように
  CFWを中心にしたコミュニティも少しずつではありますが、広がりを見せ始めています。
  ありがたいことに、blog等にも少しずつ紹介記事を執筆してくれる人も現れました。

  ですが・・・何度も繰り返し申し上げますが、CFWは私が開発したものではありません。
  私、png2raw作者様、bucchiさん、555氏、Nitori18氏、そして何より
  Hackスレにて要望やバグ報告をして頂ける、全ての名無しの皆様のお陰です。

  もし、このCFWに正式な開発者CopyRightを付けるとするならば、私ならこう名付けるでしょう。



  ★ CopyRight 2012-2013 " 2ch Kobo Hacking Thread User's " 



  全ての開発者の皆様、コンテンツ作成者の皆様、スレ住人の皆様に感謝します。


■ 初出・引用元（自分が作ったものを除く）

  ○ 初版CFW（外部日本語文字問題解消、txt変換、cbz変換など）
  http://takka.tfact.net/2012/08/kobo.html （きまぐれblog TAKKA様）

  ○ ページ送り補正クエリ
  http://uni.2ch.net/test/read.cgi/ebooks/1343091944/730（【楽天】Kobo Touch 14冊目【7980円】スレ730 ID:693sqDx5氏）

  ○ CFW最小編成ファイル（今回のパッケージの基礎ファイル）
  http://uni.2ch.net/test/read.cgi/ebooks/1342916042/286（hackingスレ286 ID:2jIscOEJ氏）

  ○ データベースチューニング・スクリプト
  http://uni.2ch.net/test/read.cgi/ebooks/1342916042/329（hackingスレ329 ID:2Ep1nSip氏）

  ○ 著者名自動更新スクリプト
  http://uni.2ch.net/test/read.cgi/ebooks/1342916042/707（hackingスレ707 ID:O5Yx68F氏）

  ○ 著者名自動更新スクリプト（作者様リリースパッケージ版）
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/67 （hackingスレPart.2 67 ID:3PlI7LTq 67モドキ氏）

  ○ 著者名自動更新スクリプト（shリファイン版）
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/395（hackingスレPart.2 395 ID:ZOEujZ0F氏）

  ○ ダメ文字回避バイナリパッチ版dosfsck（ソース解析）
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/204 （hackingスレPart.2 204 ID:ZO+9k6UZ氏）

  ○ ダメ文字回避バイナリパッチ版dosfsck（パッチバイナリ）
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/209 （hackingスレPart.2 209 ID:i4bnEXu4氏）

  ○ swapパーティション作成（情報提供）
  http://uni.2ch.net/test/read.cgi/ebooks/1342916042/859（hackingスレ859 ID:FGYJnNIp氏）

  ○ swapパーティション作成（実装方法）
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/80 （hackingスレPart.2 80 ID:BGV5272w氏）

  ○ 設定ファイルによる機能のON/OFF、スワップパーティション作成方法（作者様リリースパッケージ）
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/167 （hackingスレPart.2 167 ID:JbWf32dV 前スレ859氏）

  ○ CBRファイルダメ文字問題回避
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/453 （hackingスレPart.2 453 ID:H9N5Y6PY氏）

  ○ 外付けSDカード文字化け問題・恒久解消
  http://d.hatena.ne.jp/goriponsoft/20121124/1353729235 （ごりぽんソフトウェア ごりぽん氏）

  ○ ケイちゃんとコボ九郎 お披露目
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/593 （hackingスレPart.2 593 ID:p3ScstHg 555氏）

  ○ ケイちゃんとコボ九郎 アニメーションセット第１弾
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/654 （hackingスレPart.2 654 ID:2sNeOrmU 555氏）

  ○ ケイちゃんとコボ九郎 アニメーションセット第２弾
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/680 （hackingスレPart.2 680 ID:liQ9uNYE 555氏）

  ○ ケイちゃんとコボ九郎 アニメーションセット 最終配布用
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/717 （hackingスレPart.2 717 ID:2pm4za0S 555氏）

  ○ 起動時アニメーション変更テスト用セット
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/770 （hackingスレPart.2 770 ID:EKJYvEZ0 555氏）

  ○ 修正版アニメーションセット
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/830 （hackingスレPart.2 830 ID:etNeHegO 555氏）

  ○ png2raw 初版
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/671 （hackingスレPart.2 671 ID:rlRxyUYO）

  ○ png2raw 第二版
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/862 （hackingスレPart.2 862 ID:pGY8qDl7）

  ○ Cyberテーマセット
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/933 （hackingスレPart.2 933 ID:LSPInnyw 555氏）

  ○ fbmngplay 初版
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/937 （hackingスレPart.2 937 ID:wCsOM0IW）

  ○ fbmngplay rev1
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/937 （hackingスレPart.2 937 ID:wCsOM0IW）

  ○ fbmngplay rev2
  http://uni.2ch.net/test/read.cgi/ebooks/1352778895/957 （hackingスレPart.2 957 ID:TAkuKIfM）

  ○ Cyberテーマセット・差分
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/74  （hackingスレPart.3 74 ID:HaqmzAZU 555氏）

  ○ KoboのFont読み込み順の解析
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/96  （hackingスレPart.3 96 ID:AnEuWCwd）

  ○ 外部SDカードフリーズ問題発生時のStackTrace
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/406 （hackingスレPart.3 406 ID:dsw1rGHV）

  ○ 外部SDカードフリーズ問題・原因判明
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/452 （hackingスレPart.3 452 ID:0It/OdeY bucchi氏）

  ○ 外部SDカードフリーズ問題回避モジュール
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/465 （hackingスレPart.3 452 ID:0It/OdeY bucchi氏）

  ○ フリーズ時・電源LED点灯方法
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/503 （hackingスレPart.3 503 ID:Y8k4pvN1 bucchi氏）

  ○ フォント設定テンプレート本
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/579 （hackingスレPart.3 579 ID:EXqIvYUh Nitori18氏）

  ○ KB Mincho・初版
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/612 （hackingスレPart.3 612 ID:u88jCIp5 Nitori18氏）

  ○ KB Mincho・Ver0.3
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/627 （hackingスレPart.3 627 ID:mgkkTQ6a Nitori18氏）

  ○ Nickelイベントフックライブラリ・初版
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/633 （hackingスレPart.3 633 ID:wKWN2CVJ bucchi氏）

  ○ Nickelイベントフックライブラリ・第二版
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/640 （hackingスレPart.3 640 ID:wKWN2CVJ bucchi氏）

  ○ Linuxファイル配置の基準
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/650 （hackingスレPart.3 650 ID:gyYmUrDF）

  ○ Nickelイベントフックライブラリ・第三版
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/659 （hackingスレPart.3 659 ID:wKWN2CVJ bucchi氏）

  ○ Nickelイベントフックライブラリ・第四版
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/666 （hackingスレPart.3 666 ID:wKWN2CVJ bucchi氏）

  ○ fbmngplay,png2raw最新版
  http://ux.getuploader.com/KOBO_HACK/download/26/fbmngplay_png2raw.zip

  ○ fbmngplayスクリプト例
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/791 （hackingスレPart.3 791 ID:PE4gzSKM）

  ○ LED点滅スクリプト
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/917 （hackingスレPart.3 917 ID:xx0enP73）

  ○ LED点滅スクリプト修正版
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/921 （hackingスレPart.3 921 ID:xx0enP73）

  ○ KB Mincho・Ver0.4＋KB MinchoB
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/947 （hackingスレPart.3 947 ID:NdK4FHyg Nitori18氏）

  ○ KB Mincho・Ver0.41
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/948 （hackingスレPart.3 948 ID:NdK4FHyg Nitori18氏）

  ○ KB Mincho・Ver0.42
  http://uni.2ch.net/test/read.cgi/ebooks/1355887854/966 （hackingスレPart.3 966 ID:NdK4FHyg Nitori18氏）

  ○ マグネットサスペンド対応版フックライブラリ
  http://uni.2ch.net/test/read.cgi/ebooks/1360673958/90  （hackingスレPart.4 90 ID:1LEcvPC5 bucchi氏）

  ○ KB明朝・KB明朝M パッケージ組み込み最終版
  http://uni.2ch.net/test/read.cgi/ebooks/1360673958/166 （hackingスレPart.4 166 ID:blGvgj6Q Nitori18氏）



  自分が作った部分については、ご自由にご利用ください。
  ただし、全てのモジュール・機能について一切の商用利用を禁じます。


■ 最近の楽天とKobo社に思うこと

  公式FW2.2.xから、明らかにKoboのFWは「今まで以上に」バグが多くなりました。

  2.2.xのリリースは、日本国内でちょうど「Kobo Glo」の発売に併せたタイミングであり
  Amazonが発売する「Kindle」との差別化を前面に推しだすつもりか
  やたらと「外部SDカードで容量を追加できる！」と宣伝されまくりました。まるでそれが
  Kindleに対する大きなアドバンテージであるかのように。

  Hackスレでは外部SDカードをメインに利用するユーザーは少ないため、そんな触れ込みなど
  あまり気にも留めておらず、むしろスタックトレースを吐き出す機能をいきなり実装するなど
  不自然な更新が入っている事を「何だかおかしいな？」と感じていました。

  案の定、外部SDカードに起因する不具合が頻発し始めたのもここからだったのです。

  外部SDカードを接続したままだとUSB接続解除時に勝手にリブートする、フリーズする
  起動にやたらと時間がかかるようになった、ホーム画面の動作がおかしくなった・・
  数え上げればキリがありません。

  その後、Kobo Miniの発売に併せてFWも2.3.2にバージョンアップされました。

  このFW2.3.2は現段階で「史上最悪の公式FW」と言っていいでしょう。

  2.2.xで発生した不具合を解消して安定させたかと思いきや、実際は強烈に斜め下。
  何せ外部SDカードを挿している「だけ」でフリーズするという
  「外部SDカードを使って容量を拡張できる！」という自らの謳い文句を、自分達で
  ぶち壊すようなバグを新たに抱えさせてしまったのですから。

  しかも、それに対する問い合わせをしたところ「外部SDカードを使わないでください」と
  カスタマーサポートから回答されたという、我が耳を疑うような対応。

  システムやソフト設計・開発を生業としている自分に言わせれば、これはKobo社、楽天双方の
  怠慢と言わざるを得ません。なぜなら、この不具合がなかなか再現できないのであれば
  まだしも、実際には外部SDカードを挿して10分も動かしていればすぐ再現する不具合だからです。

  Kindleへの対応意識だけが先行し、大きな仕様変更をしたにも関わらず十分検証もせず
  そのままリリースしてしまうという信じられない暴挙に出たとしか思えません。

  その暴挙の結果がどうなったか。

  Googleで「Kobo MicroSD フリーズ」で検索すれば一発で理解できるでしょう。
  ２ちゃんねるだけではなく、blogを含めあちこちでこの問題が取り沙汰されているのです。


  Touchの国内発売時の混乱や問題から、楽天もKobo社も何を学んだのでしょうか。


  しかも、この不具合は開発者から見れば「最も初歩的なバグ」です。
  プログラマー１年生が出すようなバグです。そんなバグをあちこちに抱えているにも
  関わらず、この事態を二ヶ月以上放置している楽天、Kobo社は何を考えているのでしょうか。

  今の状態はとてもではありませんが、これまでKoboを応援してきた私でも擁護できません。

  「Kobo＝バグだらけ」「Kobo＝使いにくい」というイメージを少しでも払拭するために
  皆の力を借りてCFWを開発しているのに、メーカー自らが悪いイメージを更に広めてしまう。
  電子書籍というネットに依存するビジネススキームで、自分たちがやっていることが
  どれだけ自らの首を絞めているか、わからないのでしょうか。

  Kobo Gloは、ハードウェア的にあの値段で発売できるものじゃありません。
  静電容量式のタッチパネルが採用されなかったのは残念ですが、現時点で国内で
  発売されているE-Ink端末としては、KindlePWに唯一対抗できる、頂点を狙える
  ハードでしょう。

  Kobo Touchだって、一世代前とは言えE-Ink端末としては非常に基本性能のバランスが
  良いのです。無料配布したりバラ巻くには勿体無いハードです。
  ホームボタンが唯一ハードウェアレベルで実装されているのはTouchだけですし。

  ※ ハード的に言えば、Kobo Miniのみ性能と価格のバランスが悪いと感じますが。

  ハードウェア的には、KindleやSONY Readerなどの他のE-Ink端末には決して劣っておらず
  むしろGloに至ってはライバルとされるKindlePWをも凌駕するスペックなのです。


  そんな良いハードを、バグだらけのFWが全て台無しにしている・・・それが現状です。
  だから、一言だけ言わせてください。


  「俺らHackユーザーは構わない。しかし、一般ユーザーをこれ以上バカにすんじゃネェよ」


  もしこのドキュメントを楽天、Kobo社の関係者が読んでいるのであれば
  自分たちが、如何に自分たちの手で、愛する自社製品を貶めているかを自覚してください。

  我々Hackユーザーが活躍しなくても良い、そんな製品に一日も早く仕上げてください。



■ 免責事項
  本アップデータを利用した事によるいかなる損害も作者は一切の責任を負いません。
　自己の責任の上で使用して下さい。



■ 更新履歴

 2012/11/25 人柱版リリース
 2012/11/26 初版パッケージリリース
 2012/11/30 Ver0.91リリース
 2012/12/01 Ver0.92リリース
 2012/12/02 Ver0.93β1リリース
 2012/12/03 Ver0.93β2～β6リリース
 2012/12/04 Ver0.93正式版リリース
 2012/12/06 Ver0.93.1 緊急リリース
 2012/12/08 Ver0.93.2 緊急リリース(Wifi設定が保存されない問題を修正）
 2012/12/09 Ver0.93.3 緊急リリース(Kobo Desktopの本棚同期問題を修正）
 2012/12/18 Ver0.93.4 公式FWのバージョンアップ（FW2.3.1)に併せて修正
 2012/12/23 Ver0.93.41 不具合修正
 2012/12/24 Ver0.93.42 公式FWのバージョンアップ（FW2.3.2）に併せて修正
 2012/12/15 Ver0.94α～α3 リリース
 2012/12/23 Ver0.94β～β4 リリース
 2012/12/23 Ver0.94β～β4 リリース
 2013/01/24 Ver0.94β5 リリース  Ver0.94の正式版公開中止決定
 2013/02/04 Ver0.95β1 リリース  "Refined Edtion"から"Advanced Edition"へ変更
 2013/02/13 Ver0.95β2～β5 リリース


■ パッケージ化担当

  Kobo Touch/Glo/Mini hacking スレ Part.4 koboaya ◆aRTmFsSgfM
  mobileread(http://www.mobileread.com) ID:koboaya
  Contact To:koboayase@gmail.com
